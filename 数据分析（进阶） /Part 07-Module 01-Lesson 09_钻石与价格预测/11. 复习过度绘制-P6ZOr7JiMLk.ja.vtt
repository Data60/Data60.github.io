WEBVTT
Kind: captions
Language: ja

00:00:00.520 --> 00:00:03.420
ここまでオーバープロットに対して
特に何もしてきませんでした

00:00:03.420 --> 00:00:06.390
同じ値にいくつもの点が存在するのは

00:00:06.390 --> 00:00:09.060
多くが端数処理によるものです
コードを実行しましょう

00:00:09.060 --> 00:00:12.200
価格とカラットの両方に
テーブルコマンドを実行します

00:00:12.200 --> 00:00:16.070
それをソートすることで1番高い値が最初に現れます

00:00:16.070 --> 00:00:19.150
最初の6つだけを見ていきます

00:00:19.150 --> 00:00:22.380
これはhead関数のデフォルト設定です

00:00:22.380 --> 00:00:25.790
もちろんここでは

00:00:25.790 --> 00:00:29.620
最初の列は価格もしくはカラットで

00:00:29.620 --> 00:00:32.619
2列目はこれらの値の数を表しています

00:00:32.619 --> 00:00:35.140
これらの数値が非常に大きいのが分かります

00:00:35.140 --> 00:00:38.590
これはかなりの量のオーバープロットを引き起こします

00:00:38.590 --> 00:00:42.600
これだけのデータがあると
変数同士を作図していたとしても

00:00:42.600 --> 00:00:44.840
かなり深刻なオーバープロットになります

00:00:44.840 --> 00:00:47.620
そのためにデータがどれだけ密であるか
疎であるかが分かりにくくなります

00:00:47.620 --> 00:00:50.840
それらはカギとなるポイントです

00:00:50.840 --> 00:00:53.630
レッスン4でお話ししたように点にジッタと

00:00:53.630 --> 00:00:56.530
透過性を追加して点を小さくすることで対処できます

00:00:56.530 --> 00:00:59.830
ggplotではアルファパラメータで行うことができます

00:00:59.830 --> 00:01:02.980
次のコード練習問題でやってみてください

