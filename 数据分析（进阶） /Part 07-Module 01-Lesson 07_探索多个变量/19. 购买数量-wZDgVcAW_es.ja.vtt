WEBVTT
Kind: captions
Language: ja

00:00:00.250 --> 00:00:02.990
このデータ集合の重要な特徴に

00:00:02.990 --> 00:00:06.300
気づくことができそうな方法は他にもありますが

00:00:06.300 --> 00:00:10.100
場合によっては違った解析に飛び込み
これを見逃してしまいます

00:00:10.100 --> 00:00:12.800
例えばデータの五数要約だけを見ていたら

00:00:12.800 --> 00:00:16.120
これには簡単に気づけなかったかもしれません

00:00:16.120 --> 00:00:19.630
この不連続性への糸口の1つは75パーセンタイルが

00:00:19.630 --> 00:00:22.810
最大値とまったく同じということです
またデータ集合の中に

00:00:22.810 --> 00:00:26.180
異なる価格がいくつあるか見れば不連続性に気づきます

00:00:26.180 --> 00:00:29.360
ここでは約20の異なる価格が存在しています

00:00:29.360 --> 00:00:32.119
変数を表にするとヒストグラムで見たような

00:00:32.119 --> 00:00:34.650
分布のアイデアを得ることができます

00:00:34.650 --> 00:00:37.390
次に購入回数について見ていきましょう

00:00:37.390 --> 00:00:40.760
各家庭は8オンスのヨーグルトを
何個購入しているでしょう

00:00:40.760 --> 00:00:43.770
これに答えるにはそれぞれの味のヨーグルトを

00:00:43.770 --> 00:00:47.590
1つの変数に統合する必要があります

00:00:47.590 --> 00:00:51.340
例えばこの家庭では
一度に3種類のヨーグルトを購入しました

00:00:51.340 --> 00:00:54.700
これを全家庭で見ていくには

00:00:54.700 --> 00:00:57.300
新しい関数を活用します

00:00:57.300 --> 00:01:00.426
transform関数というものです

00:01:00.426 --> 00:01:03.290
この関数を検索して

00:01:03.290 --> 00:01:05.860
ドキュメントの下にあるコードの例を実行し

00:01:05.860 --> 00:01:08.360
どう作用するのか見てください

00:01:08.360 --> 00:01:12.300
さらにそれぞれの観測値
つまり各家庭のヨーグルト購入の総数を示す

00:01:12.300 --> 00:01:16.410
all．purchasesという名前の
新しい変数が作れるか試してください

00:01:16.410 --> 00:01:18.710
変数は必ずデータフレームに保存してください

00:01:18.710 --> 00:01:21.150
これが構文に入るかもしれません

