WEBVTT
Kind: captions
Language: zh-CN

00:00:00.290 --> 00:00:03.190
在上一个练习中 我们使用 α 和抖动来减少图形重叠

00:00:03.190 --> 00:00:06.080
但实际上我们还可以做的更多

00:00:06.080 --> 00:00:09.210
我们来听听 Mora 介绍如何使用她的专业知识

00:00:09.210 --> 00:00:13.520
和变换来调整她的散点图

00:00:13.520 --> 00:00:16.500
我接下来做的就是

00:00:16.500 --> 00:00:19.590
重新获取感知的观众数量以及

00:00:19.590 --> 00:00:22.610
实际的观众数量 但这次我变换轴

00:00:22.610 --> 00:00:26.010
这次是好友数的一个百分比

00:00:26.010 --> 00:00:28.540
这个调查中 有些人有 50 个好友

00:00:28.540 --> 00:00:32.270
有些有 100 个 有些有 2000 个 等等

00:00:32.270 --> 00:00:34.668
实际上 考虑你的观众人数占可能观众的百分比

00:00:34.668 --> 00:00:38.680
会更有意义

00:00:38.680 --> 00:00:41.530
这个研究中的所有人仅隐秘地与好友分享帖子

00:00:41.530 --> 00:00:44.140
所以可预期受其好友数的限制

00:00:44.140 --> 00:00:47.390
我们这样绘图时发现的就是

00:00:47.390 --> 00:00:51.640
所有的点都低于

00:00:51.640 --> 00:00:56.240
这条完美精度线 这条对角线

00:00:56.240 --> 00:00:58.860
实际上相当低 我还要说明的一点是

00:00:58.860 --> 00:01:02.320
这幅图实际上运行两个不同的调查

00:01:02.320 --> 00:01:04.870
在一个调查中 我通过一个帖子询问 

00:01:04.870 --> 00:01:07.840
你认为多少人看到你的发帖

00:01:07.840 --> 00:01:11.350
但是我也还询问不同的人群 通常你认为有多少人

00:01:11.350 --> 00:01:14.310
看到你在 Facebook 中分享的内容？

00:01:14.310 --> 00:01:16.920
所以这既是这幅图展示出的信息 

00:01:16.920 --> 00:01:18.940
在平常的问题中 他们的猜测都会有点高

00:01:18.940 --> 00:01:22.265
但通常仍有用户认为 可能会有 10% 的好友

00:01:22.265 --> 00:01:25.070
会看到他们的内容 

00:01:25.070 --> 00:01:27.860
而实际上很可能在给定的月份有 40% 或 50% 甚至 60%

00:01:27.860 --> 00:01:29.770
的好友会看到他们的内容

00:01:29.770 --> 00:01:31.530
所以这就是这幅图所展示出的信息

00:01:31.530 --> 00:01:34.490
即上个月内实际看到他们内容的好友百分比

00:01:34.490 --> 00:01:38.050
同样被低估

