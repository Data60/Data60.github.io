WEBVTT
Kind: captions
Language: zh-CN

00:00:00.520 --> 00:00:02.190
观察这幅图 我们可以看到这里

00:00:02.190 --> 00:00:05.290
有一些跳跃的异值 下面这里是我们的数据

00:00:05.290 --> 00:00:08.450
要确定我们坐标轴上好的 x 和 y 极限

00:00:08.450 --> 00:00:12.300
我们可以看 95% 使用 Quantile 命令

00:00:12.300 --> 00:00:15.718
这将允许我们查看 www_likes_received 的 95%

00:00:15.718 --> 00:00:18.890
收到的点赞数的 95%

00:00:18.890 --> 00:00:20.800
希望我们能够

00:00:20.800 --> 00:00:23.230
去除这些点 因此

00:00:23.230 --> 00:00:25.920
我使用 x lim 层和 y lim层

00:00:25.920 --> 00:00:29.240
我们传递 0 作为 x lim 的下边界

00:00:29.240 --> 00:00:32.689
对于上限 我们将使用网页端收到点赞数的 95% 分位点数

00:00:32.689 --> 00:00:36.600
同样 对于收到的点赞数 我们将使用

00:00:36.600 --> 00:00:39.890
相同类型的语法 只是替换变量而已

00:00:39.890 --> 00:00:42.910
0 作为我们的下边界 收到点赞数的 95% 作为

00:00:42.910 --> 00:00:45.980
我们的上边界 运行此代码后

00:00:45.980 --> 00:00:48.330
在生成的图形下面部分放大

00:00:48.330 --> 00:00:50.990
这些点最佳拟合直线的斜率

00:00:50.990 --> 00:00:54.580
就是相关性

00:00:54.580 --> 00:00:57.740
我们甚至可以使用相同的代码添加到图形中

00:00:57.740 --> 00:01:00.230
方法是通过添加一个平滑器 将方法设置为

00:01:00.230 --> 00:01:03.140
线性模型或 lm 同时还要注意 我将其着色成红色

00:01:03.140 --> 00:01:05.610
这样就可以与黑色点容易区分 

00:01:05.610 --> 00:01:10.140
我们使用一个数字来量化这种关系 

00:01:10.140 --> 00:01:12.540
这两个变量的相关性是多大？我不希望你们非得

00:01:12.540 --> 00:01:16.080
划分数据子集 所以只需包含所有数据点

00:01:16.080 --> 00:01:17.890
然后将答案四舍五入到三个小数位

