WEBVTT
Kind: captions
Language: ja

00:00:00.230 --> 00:00:02.750
ラーダの変数変換のアプローチを使ってみます

00:00:02.750 --> 00:00:06.240
友達数、いいね！、コメント、投稿ポストなどの
ほとんどの変数は

00:00:06.240 --> 00:00:10.200
ユーザがどれだけサービスを利用しているか示しており

00:00:10.200 --> 00:00:12.720
長い尾を持つロング・テール・データです

00:00:12.720 --> 00:00:15.330
ユーザの中には中央値の10倍

00:00:15.330 --> 00:00:18.580
時には100倍の数値を持つ人もいます

00:00:18.580 --> 00:00:21.050
つまり他のユーザに比べて桁違いの

00:00:21.050 --> 00:00:25.130
いいね！、クリック、コメントの数を
持つ人々が存在します

00:00:25.130 --> 00:00:28.030
統計学的に言えばこのデータは過剰に分散しています

00:00:28.030 --> 00:00:31.880
グラフの尾の部分を短くすれば変数を変換しやすくなり

00:00:31.880 --> 00:00:34.760
基準となる偏差値や指標が見えます

00:00:34.760 --> 00:00:38.140
これが先ほどの友達数のヒストグラムです

00:00:38.140 --> 00:00:40.310
まだ長い尾の部分があります

00:00:40.310 --> 00:00:44.710
この変数を変換するには自然対数、
2を底とする対数、あるいは10を底とする対数を用いて

00:00:44.710 --> 00:00:47.440
対数を取ることを考えます

00:00:47.440 --> 00:00:50.350
平方根などを使うこともできます

00:00:50.350 --> 00:00:53.110
するとパターンをはっきり見られます

00:00:53.110 --> 00:00:55.970
線形回帰など一般的な統計手法は

00:00:55.970 --> 00:00:59.680
変数が正規分布だという仮定のもと作られます

00:00:59.680 --> 00:01:03.230
なので線形回帰や他のモデリングの方法を使う際は

00:01:03.230 --> 00:01:05.930
対数を取った変数を用いることで

00:01:05.930 --> 00:01:09.830
データを正規分布もしくは

00:01:09.830 --> 00:01:13.100
それに近いものに変換することができます

00:01:13.100 --> 00:01:15.380
ここでモデリングは行いませんが

00:01:15.380 --> 00:01:18.510
変数変換の方法を見ていきましょう

00:01:18.510 --> 00:01:21.080
まずはsummaryコマンドでやってみます

00:01:21.080 --> 00:01:26.130
普通の友達数の中央値は82 平均値は196です

00:01:26.130 --> 00:01:30.480
この友達数に10を底とする対数を使うと
別の表が現れます

00:01:30.480 --> 00:01:33.070
最小値がマイナス無限大で

00:01:33.070 --> 00:01:37.410
平均値もマイナス無限大になっているので少し変ですね

00:01:37.410 --> 00:01:40.460
一体何が起きているのでしょうか

00:01:40.460 --> 00:01:42.940
友達数がゼロのユーザもいるので

00:01:42.940 --> 00:01:46.340
ゼロに対して対数を取ると
定義されない値になってしまいます

00:01:46.340 --> 00:01:48.670
ゼロに近づく時の対数関数の極限が
マイナス無限大なので

00:01:48.670 --> 00:01:50.340
ここにそれが現れたのです

00:01:50.340 --> 00:01:55.280
friend＿countの後ろに1を足せば
すべてのデータが反映され

00:01:55.280 --> 00:01:58.810
マイナス無限大という結果にはなりません

00:01:58.810 --> 00:02:01.910
続いてfriend＿countに平方根を使ってみましょう

00:02:01.910 --> 00:02:04.320
これは別のタイプの変換となります

00:02:04.320 --> 00:02:07.990
ここでは10の指針で友達数を比較しているので

00:02:07.990 --> 00:02:11.380
10を底とする対数の方が
理解しやすい変換法だと思います

00:02:11.380 --> 00:02:14.820
基本的にはpH目盛のような10ごとの目盛です

00:02:14.820 --> 00:02:17.940
summaryの中での変換は見ましたので

00:02:17.940 --> 00:02:21.700
ヒストグラムで同様の変換が当てはまるか見ましょう

00:02:21.700 --> 00:02:24.500
インストラクターノートで目盛の使い方と

00:02:24.500 --> 00:02:27.550
1ページに複数のグラフを作成する方法を確認し

00:02:27.550 --> 00:02:31.200
次のプログラミング練習問題に挑戦してください

00:02:31.200 --> 00:02:34.220
そこでは3つのヒストグラムを作成します

00:02:34.220 --> 00:02:37.220
1つ目が元の友達数ヒストグラム

00:02:37.220 --> 00:02:40.460
2つ目が10を底とする対数を使って
変換したヒストグラム

00:02:40.460 --> 00:02:44.530
3つ目が平方根を使って変換したグラフです

00:02:44.530 --> 00:02:47.620
ここではすべての情報はお話ししません

00:02:47.620 --> 00:02:50.390
よいプログラマーになるには

00:02:50.390 --> 00:02:53.470
ドキュメントから答えを見つけることも重要です

00:02:53.470 --> 00:02:56.390
資料は提供していますので

00:02:56.390 --> 00:02:59.460
それを使って自分で解いてみましょう

