WEBVTT
Kind: captions
Language: zh-CN

00:00:00.170 --> 00:00:01.540
这是另一个表格

00:00:01.540 --> 00:00:04.570
这个表格里有一些人身高和体重的数据

00:00:04.570 --> 00:00:09.300
表格的每一行都包含不同人的同类型数据

00:00:09.300 --> 00:00:13.000
作为程序员 我们已经很熟悉数据类型的概念

00:00:13.000 --> 00:00:18.830
像 Alan 这样的一个字符串与188这样的数字是不同的数据类型

00:00:18.830 --> 00:00:23.528
但188与72是相同的类型 即使它们代表

00:00:23.528 --> 00:00:25.810
不同的含义

00:00:25.810 --> 00:00:30.560
一个表示以厘米为单位的身高 另一个表示以公斤为单位的体重

00:00:30.560 --> 00:00:35.020
数据库表格中的每一列都会有与它关联的数据类型

00:00:35.020 --> 00:00:38.810
同一列中的所有值都会是相同的类型 并且

00:00:38.810 --> 00:00:41.260
它们的含义相同

00:00:41.260 --> 00:00:44.339
我们不会把厘米和公斤混在同一列

00:00:45.480 --> 00:00:49.090
数据库系统自身不知道哪个数字是以厘米为单位的

00:00:49.090 --> 00:00:50.850
哪个数字是以公斤为单位的

00:00:50.850 --> 00:00:53.370
在编写代码时 我们自己必须记住

00:00:54.420 --> 00:00:55.880
这里有另一个例子

00:00:55.880 --> 00:00:58.830
Georgia 是一个字符串 是一条文本数据

00:00:58.830 --> 00:01:02.770
但代表国家名称的字符串 比如 Georgia

00:01:02.770 --> 00:01:06.140
与代表美国一个州的字符串 Georgia 不是同一种含义

00:01:06.140 --> 00:01:11.560
又或字体 Georgia 或一个人的名字

00:01:11.560 --> 00:01:13.910
比如 Georgia O'Keeffe

00:01:13.910 --> 00:01:19.040
数字413可以代表酒店房间号或金额

00:01:19.040 --> 00:01:24.350
或西马萨诸塞州的电话区号 它的含义不同

00:01:24.350 --> 00:01:26.650
为了更清楚地思考这个问题 我们来做个小测验

00:01:27.800 --> 00:01:29.930
这里有五条数据

00:01:29.930 --> 00:01:34.260
思考每条数据分别是什么类型 并勾选

00:01:34.260 --> 00:01:36.880
其中肯定属同一类型的两条数据

