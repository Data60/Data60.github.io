WEBVTT
Kind: captions
Language: zh-CN

00:00:00.350 --> 00:00:04.070
大家或许已经注意到 一旦子句和子查询开始堆叠

00:00:04.070 --> 00:00:06.480
SQL 查询语句会变得非常复杂

00:00:07.480 --> 00:00:10.460
作为程序员 在我们写代码时 如果函数开始变得过于复杂 

00:00:10.460 --> 00:00:15.300
我们会想办法将代码重构为较简单的函数

00:00:15.300 --> 00:00:18.250
我们在 SQL 中也能进行这一操作

00:00:18.250 --> 00:00:20.670
每个 select 查询都会返回一个表格 

00:00:20.670 --> 00:00:23.700
因此 我们可以让数据库替我们记住一个 select 查询

00:00:23.700 --> 00:00:25.640
并让它可以用于随后的查询

00:00:25.640 --> 00:00:27.990
这被称为视图

00:00:27.990 --> 00:00:31.000
这是创建视图指令的语法

00:00:31.000 --> 00:00:35.230
视图对于 count 和 sum 这样的聚合函数非常有用

00:00:35.230 --> 00:00:39.010
例如 如果我们有一个表格 其中包含各门课程中注册的学生

00:00:39.010 --> 00:00:41.590
我们想知道每门课有多少学生

00:00:42.670 --> 00:00:44.970
我们可以用聚合函数得出这一结果

00:00:44.970 --> 00:00:49.560
但是之后 如果我们打算多次使用该查询 我们可以把它存储在视图中

00:00:49.560 --> 00:00:52.440
使用视图而不是执行一个子查询

00:00:52.440 --> 00:00:55.900
有点像调用一个函数 而不是复制代码

00:00:55.900 --> 00:00:59.470
视图的另一个用途是 在一个有很多列的表格中

00:00:59.470 --> 00:01:01.370
只显示特定的列

00:01:01.370 --> 00:01:04.599
如果一个表格有20列 你的很多查询只关联

00:01:04.599 --> 00:01:08.940
其中的四列 那么制作一个视图会让你的代码清楚很多

00:01:08.940 --> 00:01:09.900
这里有个要考虑的问题

00:01:09.900 --> 00:01:14.580
你认为像 PostgreSQL 这样的数据库系统能让我们在视图中

00:01:14.580 --> 00:01:15.820
更新并删除行吗？

