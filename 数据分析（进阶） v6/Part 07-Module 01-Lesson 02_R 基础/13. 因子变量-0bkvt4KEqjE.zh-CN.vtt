WEBVTT
Kind: captions
Language: zh-CN

00:00:00.400 --> 00:00:03.040
现在大家已经熟悉了基本的 R 命令

00:00:03.040 --> 00:00:05.200
我们来观察一些更多数据 这次我们要观察

00:00:05.200 --> 00:00:08.215
从 Reddit 用户调查得到的数据

00:00:08.215 --> 00:00:11.220
Reddit 是一个社交和娱乐网站 用户可以发布

00:00:11.220 --> 00:00:14.620
热门话题的链接及评论 这项调查询问用户的

00:00:14.620 --> 00:00:18.940
人口统计学信息 比如性别、年龄、国籍和就业状况

00:00:18.940 --> 00:00:21.720
甚至询问用户喜欢那种奶酪

00:00:21.720 --> 00:00:25.160
是否更喜欢狗狗、猫猫或者乌龟

00:00:25.160 --> 00:00:27.740
从讲师注释中下载这个数据集 将其载入 R

00:00:27.740 --> 00:00:30.400
完成后 使用 str 函数观察一下数据

00:00:30.400 --> 00:00:33.560
现在 当我尝试读取文件时

00:00:33.560 --> 00:00:37.060
有时候会得到一个错误 这很正常

00:00:37.060 --> 00:00:40.000
我建议你查看一下当前的工作目录 来解决这个问题

00:00:40.000 --> 00:00:43.380
通常是因为你的目录不是文件存储所在的位置

00:00:43.380 --> 00:00:47.320
好的 我设置了我的目录 现在要再次尝试

00:00:47.320 --> 00:00:51.448
这个代码 数据就是这样

00:00:51.448 --> 00:00:53.600
运行 str 命令 我们可以看到这里有很多数据

00:00:53.600 --> 00:00:56.150
大多数变量都有一种因数

00:00:56.150 --> 00:01:00.170
现在 因数是一种类别变量

00:01:00.170 --> 00:01:03.200
具有不同的偏好或级别

00:01:03.200 --> 00:01:06.660
例子之一就是就业状态 这个变量有多种不同的级别

00:01:06.660 --> 00:01:10.440
比如全职就业或兼职就业

00:01:10.440 --> 00:01:13.950
或者无工作 我们可能感兴趣的一点是

00:01:13.950 --> 00:01:17.040
每个就业状态组中有多少人

00:01:17.040 --> 00:01:19.270
我们可将该变量制成表

00:01:19.270 --> 00:01:22.250
观察每个组中的人数 运行这个代码 我可以看到这个表

00:01:22.250 --> 00:01:25.950
同时通过在我们的DataFrame上运行汇总命令 

00:01:25.950 --> 00:01:28.970
可以得到这些计数以及其它数据点

00:01:28.970 --> 00:01:31.640
建议你们自己尝试这个功能

00:01:31.640 --> 00:01:35.840
除了就业状态等因数变量以外 R 编程语言

00:01:35.840 --> 00:01:39.520
还有其他数据类型 比如列表和矩阵

00:01:39.520 --> 00:01:42.150
但我们真的不想在本课中使用它们

00:01:42.150 --> 00:01:44.650
我们在讲师注释中提供了数据类型的参考

00:01:44.650 --> 00:01:46.580
如果你想做多了解 请前往查看

