WEBVTT
Kind: captions
Language: zh-CN

00:00:00.300 --> 00:00:03.890
在我们改进数据库代码 使其用上真正的数据库时

00:00:03.890 --> 00:00:06.620
你写出的东西可能跟这个很像

00:00:06.620 --> 00:00:11.860
在 getAllPosts 函数里连接数据库 创建光标

00:00:11.860 --> 00:00:15.240
执行一个 select 语句 将结果正确地格式化

00:00:15.240 --> 00:00:17.400
关闭连接并返回帖子

00:00:17.400 --> 00:00:21.510
接下来这个添加帖子的函数 连接数据库 创建光标

00:00:21.510 --> 00:00:26.130
执行一个嵌入了帖子内容的 insert 语句

00:00:26.130 --> 00:00:28.590
向数据库提交改动然后关闭

00:00:28.590 --> 00:00:31.080
看起来没什么不对 然而并不是这样

00:00:31.080 --> 00:00:33.700
如果你要写一堆不同的论坛应用

00:00:33.700 --> 00:00:37.571
有没有哪些帖子是不能正常运行的？

00:00:47.114 --> 00:00:48.250
什么？

00:00:48.250 --> 00:00:49.440
稍等

00:00:49.440 --> 00:00:52.180
这个帖子挺正常的呀

00:00:52.180 --> 00:00:54.580
怎么就出现这个奇怪的错误了呢？

00:00:55.670 --> 00:00:57.550
先回到终端里

00:00:57.550 --> 00:00:58.230
噢 看这

00:00:58.230 --> 00:01:00.220
有一个 python 的回溯信息

00:01:00.220 --> 00:01:01.680
写道代码里有错误

00:01:01.680 --> 00:01:03.620
在 t 的附近有语法错误

00:01:03.620 --> 00:01:07.010
问题发生在 INSERT 语句的 VALUES

00:01:07.010 --> 00:01:10.020
并不能看出有啥问题啊

00:01:10.020 --> 00:01:11.930
再回头来看看代码

00:01:11.930 --> 00:01:15.290
这里就是负责把帖子内容发到数据库的现场

00:01:15.290 --> 00:01:17.410
不过是添加了一个 SQL 语句而已

00:01:18.570 --> 00:01:20.730
不过是在一对单引号里

00:01:20.730 --> 00:01:23.870
因为我们把 SQL 字符串放进一对单引号里

00:01:23.870 --> 00:01:28.100
在数据库看来 帖子里也有一个单引号 就把它当成整个语句的结束引号了

00:01:28.100 --> 00:01:31.760
所以数据库就看不懂这个 t 是啥了

00:01:31.760 --> 00:01:34.270
多说一句 如果你的代码没有这个错误

00:01:34.270 --> 00:01:36.240
那么恭喜你 一切完美

00:01:36.240 --> 00:01:39.900
但你还要注意这个问题 因为类似错误有很多 可能不会都首次出现

00:01:39.900 --> 00:01:43.520
尽管这里有一些小错误 但仍旧还可以发帖子

00:01:43.520 --> 00:01:45.020
只要不发带单引号的内容就行了

00:01:46.060 --> 00:01:47.050
但我这还有一个例子

00:01:48.270 --> 00:01:49.280
单引号

00:01:49.280 --> 00:01:50.215
右括号

00:01:50.215 --> 00:01:52.490
分号

00:01:52.490 --> 00:01:54.720
不用跟着我说的打

00:01:54.720 --> 00:01:57.800
从指导步骤中复制到你的论坛就行

00:01:57.800 --> 00:01:59.235
从 posts 删除

00:01:59.235 --> 00:02:01.166
分号

00:02:01.166 --> 00:02:02.926
两个短横

00:02:02.926 --> 00:02:05.090
点击发布

00:02:05.090 --> 00:02:07.270
哎呦 所有的帖子都没了

00:02:07.270 --> 00:02:10.050
我们不是有数据库的吗

00:02:10.050 --> 00:02:11.170
等等

00:02:11.170 --> 00:02:13.790
我记得这种情况在 XKCD 漫画里有看到过

00:02:13.790 --> 00:02:19.590
这其实是一种叫做 SQL 注入攻击的安全漏洞

00:02:19.590 --> 00:02:23.610
帖子里的内容被当作了数据库命令

00:02:23.610 --> 00:02:26.500
也就是 从 posts 表单删除

00:02:26.500 --> 00:02:30.158
当它执行时 就删掉了 posts 表单里所有行的数据

00:02:30.158 --> 00:02:33.220
特别讨厌
54
00:02:33,220 --&gt;d 00:02:35,390
我们写的超酷测试帖子都没了

00:02:35.390 --> 00:02:37.060
而且代码里还有一个臭名昭著的安全漏洞

00:02:37.060 --> 00:02:40.010
怎么修复它呢？

00:02:40.010 --> 00:02:42.710
也许我们再也不能挽回之前那些超酷的帖子了

00:02:42.710 --> 00:02:44.850
但至少我们应该避免让它再次发生

