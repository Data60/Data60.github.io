WEBVTT
Kind: captions
Language: zh-CN

00:00:00.625 --> 00:00:02.700
现在已经修复了咱们的 web 应用

00:00:02.700 --> 00:00:07.220
用户已经不能发布 JavaScript 并制造无限的垃圾了

00:00:07.220 --> 00:00:10.300
但之前的垃圾还留在数据库里

00:00:10.300 --> 00:00:12.010
怎样才能清理掉它们呢？

00:00:12.010 --> 00:00:16.400
关键在于 如果某个用户发布了某些非常坏的东西

00:00:16.400 --> 00:00:18.470
我们怎样才能摆脱掉那个帖子呢？

00:00:18.470 --> 00:00:20.690
有很多种方法

00:00:20.690 --> 00:00:24.820
第一 我们可以用一些无害的东西替换掉垃圾帖子

00:00:24.820 --> 00:00:27.020
比如说 奶酪！

00:00:27.020 --> 00:00:31.510
从 psql 数据库控制台可以实现它 但如果要这么做

00:00:31.510 --> 00:00:35.600
我们就要用到一个新的 SQL 命令 叫做 update

00:00:35.600 --> 00:00:40.200
SQL 的 update 命令的用途是 改变已经存在于行纪录中的值

00:00:40.200 --> 00:00:43.470
它跟 insert 不同 并不会创建新的行纪录

00:00:43.470 --> 00:00:46.740
它会替换掉某个指定列中的值

00:00:46.740 --> 00:00:49.860
把符合限制条件的行纪录都覆盖上新的值

00:00:51.210 --> 00:00:55.130
update 语句中的 where 限制条件分句 跟 select 里的运行机制相同

00:00:55.130 --> 00:00:59.300
如果你完全不声明它 update 操作就会应用到表单的所有行

00:00:59.300 --> 00:01:01.800
一般来说你不会这么做的

00:01:01.800 --> 00:01:05.250
不过你总是可以先做一个 带有限制条件的 select 来确保

00:01:05.250 --> 00:01:07.840
update 操作会应用到正确的行记录上

00:01:07.840 --> 00:01:10.240
那么我们怎样才能找到这些帖子呢？

00:01:10.240 --> 00:01:14.410
如果必须要手动打出整个垃圾帖子的内容 然后用等号来匹配的话

00:01:14.410 --> 00:01:16.890
就太痛苦了

00:01:16.890 --> 00:01:20.030
其实有一个更合适的操作符 like 操作符

00:01:20.030 --> 00:01:22.450
like 把一个值 通常是一个文本列

00:01:22.450 --> 00:01:25.730
把它放在左侧 然后把一个搜索模板放在右边

00:01:25.730 --> 00:01:27.940
仅仅因为你需要理解百分号

00:01:27.940 --> 00:01:31.780
具有另一个意义 它是代表着 SQL模版可以使用出现的任意字符串

00:01:33.200 --> 00:01:37.750
然后在 psql 控制台 使用 update 命令来替换所有内容

00:01:37.750 --> 00:01:42.560
在数据库里可怕的垃圾帖子就被替换成了无害的奶酪

00:01:42.560 --> 00:01:46.800
检查一下 重新载入论坛页面 然后在 psql 输入

00:01:46.800 --> 00:01:50.690
select * from posts 然后看看所有的垃圾是不是都被替换了

