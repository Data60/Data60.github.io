WEBVTT
Kind: captions
Language: zh-CN

00:00:00.180 --> 00:00:03.580
当你想要用代码向表中添加数据时

00:00:03.580 --> 00:00:07.500
在执行插入语句之前还有一个步骤

00:00:07.500 --> 00:00:10.240
你必须把改动 commit 到数据库

00:00:10.240 --> 00:00:12.200
为什么要这样做呢？

00:00:12.200 --> 00:00:14.410
假设我们要写一个记账系统

00:00:14.410 --> 00:00:16.780
现在需要从一个账户里拿出一些钱

00:00:16.780 --> 00:00:18.510
并将它存入另一个账户里

00:00:18.510 --> 00:00:21.410
这就有可能需要改动两个表

00:00:21.410 --> 00:00:24.080
但这些改动需要同时发生

00:00:24.080 --> 00:00:27.050
万一出了差错 那这两处改动最好都别生效

00:00:27.050 --> 00:00:30.840
另外 如果在我们访问数据库的同时还有另一个用户也在访问

00:00:30.840 --> 00:00:33.800
就不能让那个用户看到一处改了 另一处没改的情况

00:00:33.800 --> 00:00:36.440
这是数据库的精髓之一

00:00:36.440 --> 00:00:38.310
当我们做 insert 这样的改动时

00:00:38.310 --> 00:00:41.240
改动就被计入数据库的一项事务

00:00:41.240 --> 00:00:44.630
当我们调用 commit 操作 这项事务才真正地产生作用

00:00:44.630 --> 00:00:46.670
如果我们不提交就关闭了连接

00:00:46.670 --> 00:00:47.830
所有的改动就会丢失

00:00:49.270 --> 00:00:51.890
在下一页 有一些 Python 代码

00:00:51.890 --> 00:00:55.010
负责向一个表中插入一行但并没有提交

00:00:55.010 --> 00:00:56.080
然后重新连接

00:00:56.080 --> 00:00:59.060
试图找到那个新的行 但那一行已经丢失

00:00:59.060 --> 00:01:00.930
请你原封不动地运行一下代码

00:01:00.930 --> 00:01:04.150
然后在正确的地方加上 commmit 来保存这个改动

