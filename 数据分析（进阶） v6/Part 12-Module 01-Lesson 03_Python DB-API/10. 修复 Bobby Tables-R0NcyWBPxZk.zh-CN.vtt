WEBVTT
Kind: captions
Language: zh-CN

00:00:00.460 --> 00:00:04.046
这里就是执行插入请求的 AddPost 函数

00:00:05.260 --> 00:00:09.420
我们只要在后面添加一个逗号和一个元组

00:00:09.420 --> 00:00:12.530
在这个 %s 之后 保证括号都是匹配的

00:00:13.660 --> 00:00:16.261
我们的论坛应该就安全地不受 SQL 攻击的侵扰了

00:00:17.760 --> 00:00:18.460
来试一下

00:00:19.990 --> 00:00:25.680
发一个测试帖子 里面有一个单引号 正如所料

00:00:25.680 --> 00:00:26.200
一切正常

00:00:27.360 --> 00:00:29.520
再来试试请求攻击

00:00:29.520 --> 00:00:37.090
单引号 括号 分号 从 Posts 删除 分号 双短横

00:00:39.140 --> 00:00:43.110
这次 就能成功地把它当作单纯的文本

00:00:43.110 --> 00:00:44.910
而不是 SQL 的一部分了

00:00:44.910 --> 00:00:45.770
真棒

00:00:45.770 --> 00:00:48.790
做了这个小改动 我们就能阻止可能发生在有数据库后端的网络应用上

00:00:48.790 --> 00:00:51.260
最臭名昭著的漏洞

00:00:51.260 --> 00:00:54.540
请记住 一旦你需要执行一个插入请求时

00:00:54.540 --> 00:00:58.910
就一定要使用请求参数 别用字符串通配符

00:00:58.910 --> 00:01:00.080
就是怕你忘记

00:01:00.080 --> 00:01:03.060
Psycopg 2 的文档里针对这一点是这样说的

00:01:03.060 --> 00:01:07.760
警告 千万千万千万不要使用 Python 字符串相关的东西 加号

00:01:07.760 --> 00:01:10.110
字符串插入参数 百分号

00:01:10.110 --> 00:01:14.340
来向 SQL 请求字符串传递变量 在枪口下也别这么干

00:01:14.340 --> 00:01:16.309
而且我们使用的正是文档里推荐的格式

00:01:17.480 --> 00:01:20.870
个人看来 一个文档确实没必要告诉我们

00:01:20.870 --> 00:01:25.360
在枪口下应该怎么做事 但我们确实有义务去写安全的代码

