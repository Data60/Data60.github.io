WEBVTT
Kind: captions
Language: zh-CN

00:00:00.380 --> 00:00:03.480
之前 我说过数据库表很像

00:00:03.480 --> 00:00:06.570
你们可能在信息图表或工具书中见过的表

00:00:06.570 --> 00:00:08.390
不过有一些不同之处

00:00:08.390 --> 00:00:11.190
其中重要的一点是 一个问题可以有多个答案

00:00:11.190 --> 00:00:15.230
在我们使用 count 或其它聚合函数时往往会遇到这种情况

00:00:15.230 --> 00:00:18.260
这个表描述动物及它们吃的食物

00:00:18.260 --> 00:00:21.130
与我们之前见过的表不同 这个表的某些单元格

00:00:21.130 --> 00:00:25.790
有时具有相同的值 有时却有多个不同的值

00:00:25.790 --> 00:00:30.530
我们在数据库表可以看到棕熊的食物

00:00:30.530 --> 00:00:32.540
包括鱼、肉和植物

00:00:32.540 --> 00:00:34.780
我们把那句话拆分成多个句子

00:00:34.780 --> 00:00:37.200
这些句子在表中形成多行

00:00:37.200 --> 00:00:40.630
我们何不将其分成多列 或者

00:00:40.630 --> 00:00:44.790
把几个值放入一列 用逗号或别的什么隔开呢？

00:00:44.790 --> 00:00:47.010
之所以不这么做 有很多原因

00:00:47.010 --> 00:00:50.620
如果我们尝试使用多列去表示每个动物吃的不同食物

00:00:50.620 --> 00:00:53.570
我们事先不知道要分几列

00:00:53.570 --> 00:00:57.370
毕竟 有些动物吃的食物种类要比其它动物多很多

00:00:57.370 --> 00:01:01.120
此外 我们希望能够使用 Count 和其它聚合函数

00:01:01.120 --> 00:01:04.090
这些函数只有在我们将数据分成不同行  

00:01:04.090 --> 00:01:04.809
而不是堆在一起时才能使用

00:01:05.820 --> 00:01:08.606
现在 让我们来看一条真实的数据库查询语句

00:01:08.606 --> 00:01:14.700
Select food from diet where species ＝ 'orangutan'

00:01:14.700 --> 00:01:16.640
这看起来几乎就像是一个寻常的英文句子 但是

00:01:16.640 --> 00:01:19.190
这实际上是一条 SQL 数据库的查询语句

00:01:19.190 --> 00:01:23.370
它要求数据库从饮食表返回特定的数据

00:01:23.370 --> 00:01:26.480
一会儿 我们将在实际的数据库中运行这条查询语句

00:01:26.480 --> 00:01:28.910
但在我们开始前 你能推断出

00:01:28.910 --> 00:01:30.630
它会从这个表返回哪些行和哪些列吗？

