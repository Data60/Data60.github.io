WEBVTT
Kind: captions
Language: zh-CN

00:00:00.290 --> 00:00:05.030
因此 在第一种情况下 我们有三列 学生姓名、教师姓名和

00:00:05.030 --> 00:00:06.710
学生的成绩

00:00:06.710 --> 00:00:10.450
规范化的规则之一就是 我们必须有一个唯一键

00:00:10.450 --> 00:00:14.240
描述了每一行的意义 但名字不是唯一的

00:00:14.240 --> 00:00:18.730
如果我们有两个学生都叫 Jake Smith 或 Pavel Ivanov

00:00:18.730 --> 00:00:21.970
或别的什么 这不好

00:00:21.970 --> 00:00:25.500
同样 如果一个学生学的两门课是由同一个老师教的

00:00:25.500 --> 00:00:27.820
比如 CS 或数学课

00:00:27.820 --> 00:00:29.440
我们也会遇到问题

00:00:29.440 --> 00:00:31.780
因此这也不是规范化

00:00:31.780 --> 00:00:33.890
这边 我们也有一个表格

00:00:33.890 --> 00:00:36.500
我们给每个学生一个唯一的 ID 号

00:00:36.500 --> 00:00:38.270
我们对课程也使用唯一的 ID

00:00:38.270 --> 00:00:40.900
而不是只对老师的姓名这样做

00:00:40.900 --> 00:00:44.640
但是 我们存储信息的表格之间并不一定要有什么关系

00:00:44.640 --> 00:00:49.070
比如23号学生始终都是 Jake Smith 不论他学的是什么课

00:00:49.070 --> 00:00:53.900
实际上这应该分成两个表格 因此这也不是规范化

00:00:53.900 --> 00:00:55.280
把它分成两个表格

00:00:55.280 --> 00:00:57.710
这个操作我们在第三组中已经完成了

00:00:57.710 --> 00:01:01.350
一个表格给出了每个学生 ID 与他们姓名之间的关系

00:01:01.350 --> 00:01:04.129
另一个给出了学生学习的每一门课程的成绩

00:01:04.129 --> 00:01:06.100
如果我们只知道学生的姓名

00:01:06.100 --> 00:01:08.700
我们可以依照那个表格对这个表格进行连接 找到他们所学的课程

00:01:08.700 --> 00:01:12.000
但是 如果有两个同名的学生我们会得到两个

00:01:12.000 --> 00:01:14.290
不管怎样 这是规范化

00:01:14.290 --> 00:01:17.320
第四组 这个表格与那个表格之间唯一的不同就是

00:01:17.320 --> 00:01:21.450
还记录了学生的出生日期

00:01:21.450 --> 00:01:23.540
但一个人只有一个出生日期

00:01:23.540 --> 00:01:26.140
而出生日期与学生的成绩没有任何关系

00:01:26.140 --> 00:01:28.130
因此在这个表格中添加这一列

00:01:28.130 --> 00:01:30.920
并不会让这个表格的规范化程度比这个差

00:01:30.920 --> 00:01:33.060
因此这个和这个都是规范化的

