WEBVTT
Kind: captions
Language: en

00:00:00.280 --> 00:00:04.420
Earlier in this course, we've used
Joins to derive new tables, from two or

00:00:04.420 --> 00:00:06.090
more existing tables.

00:00:06.090 --> 00:00:09.680
But there are also cases, where you
want to join a table to it's self.

00:00:09.680 --> 00:00:13.530
For instance to find pairs of entries
that have something in common.

00:00:13.530 --> 00:00:17.110
Doing this in the database is generally
a lot faster than pulling that data in

00:00:17.110 --> 00:00:19.510
to your python code and
scanning it there.

00:00:19.510 --> 00:00:20.890
Here is an example.

00:00:20.890 --> 00:00:24.620
This is a table of students living,
in the residence halls of a college.

00:00:24.620 --> 00:00:26.280
Student ID is the primary key,

00:00:26.280 --> 00:00:30.210
and then we have the name of the
residence building and the room number.

00:00:30.210 --> 00:00:33.420
These are actually some of the names
of dormitories at my college.

00:00:33.420 --> 00:00:36.570
Now suppose, we want to find out
which students are roommates.

00:00:36.570 --> 00:00:40.410
In other words they live in the same
building, and have the same room number.

00:00:40.410 --> 00:00:43.780
Joining the table to
itself is how we do this.

00:00:43.780 --> 00:00:47.850
This exact query isn't quite right,
but it's close.

00:00:47.850 --> 00:00:51.810
Try it out on the next page,
then see if you can fix it.

