WEBVTT
Kind: captions
Language: ar

00:00:00.120 --> 00:00:02.420
لو كنتم قد شاهدتم فيديو الحل فقد كنتم ستلاحظون أنني
استخدمتُ

00:00:02.420 --> 00:00:06.380
أسلوبين مختلفين لتحويل المتغير الخاص بنا. استخدم
الأسلوب الأول

00:00:06.380 --> 00:00:09.450
ملخصًا حول المتغير مباشرةً، ثم استخدم الأسلوب
الثاني

00:00:09.450 --> 00:00:13.130
طبقة تحجيم. فلنركِّز على الاختلافات بين هذين
المخططين

00:00:13.130 --> 00:00:16.560
ونرَ ما يفعله التعديلان حقًا. سأحفظ هذا المخطط
الأول

00:00:16.560 --> 00:00:19.700
في نطاق سجل، وسأحفظ المخطط الثاني

00:00:19.700 --> 00:00:22.660
في نطاق عدد. سأستخدم كلًا من هذين المتغيرين
وأمرِّره

00:00:22.660 --> 00:00:25.950
إلى grid.arrange، وبالتالي يمكنني رسم مخطط لهما
جنبًا إلى جنب؛

00:00:25.950 --> 00:00:28.730
ولهذا تساوي ncal اثنان. عند تشغيل هذا الكود

00:00:28.730 --> 00:00:31.680
يمكننا أن نرى أننا نحصل على مدرجينا التكراريين. عند
التركيز

00:00:31.680 --> 00:00:34.240
على المخططين، يمكننا أن نرى أن الاختلاف

00:00:34.240 --> 00:00:38.742
في تسمية المحور x فعليًا. استخدام scale_x_log10
سيسمِّي المحور

00:00:38.742 --> 00:00:42.750
بـ friend_counts الفعلية، بينما استخدام الملخص log10
سيسمِّي

00:00:42.750 --> 00:00:45.640
المحور x في وحدات السجل. هذا مجرد شيء يجدر بكم

00:00:45.640 --> 00:00:48.380
تذكُّره بينما تنشئون مزيدًا من المخططات. بشكل عام،
أعتقد

00:00:48.380 --> 00:00:51.208
أن التفكير في الأعداد الحقيقية أسهل؛ ولهذا أفضِّل

00:00:51.208 --> 00:00:54.020
استخدام scale_x_log10 كطبقة. الآن، يعني ذلك بالفعل

00:00:54.020 --> 00:00:56.540
أنكم ستحتاجون أن تتعلموا بناء جملة ggplot؛

00:00:56.540 --> 00:00:58.605
لكن لا تقلقوا فستمارسون هذا كثيرًا في الدرس 4،

00:00:58.605 --> 00:01:01.480
وإذا شعرتم أن عملكم محفوف بالمخاطر حقًا فيمكنكم
إضافة

00:01:01.480 --> 00:01:02.780
طبقة إلى أيٍ من المخطط التي

00:01:02.780 --> 00:01:06.010
تنشئونها. إذًا خذوا مدرجنا التكراري الأصلي لعدد
الأصدقاء. فلنضِف

00:01:06.010 --> 00:01:09.319
scale_x_log10 إليه فحسب، ولتنطلقوا من هنا. إنه

00:01:09.319 --> 00:01:13.163
لديكم؛ المدرج التكراري الجديد المُحوَّل باستخدام
أساس السجل 10.

