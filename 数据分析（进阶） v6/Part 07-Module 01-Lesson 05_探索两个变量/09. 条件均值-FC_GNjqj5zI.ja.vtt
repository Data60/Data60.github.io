WEBVTT
Kind: captions
Language: ja

00:00:00.120 --> 00:00:03.660
少し戻って友達数と年齢の散布図を見ましょう

00:00:03.660 --> 00:00:08.240
この散布図はデータ集合のすべての点を
可視化しているので

00:00:08.240 --> 00:00:09.760
データが理解しやすいです

00:00:09.760 --> 00:00:14.720
ただ一般的にはこういった図では
重要な数は判断できません

00:00:14.720 --> 00:00:18.590
もし変数の平均値や中央値が他の変数により

00:00:18.590 --> 00:00:21.520
どう変化するか知りたいとします

00:00:21.520 --> 00:00:24.880
そういった時は1つ1つの点を作図するより

00:00:24.880 --> 00:00:28.880
他の方法で2つの変数の関連性を
要約するべきです

00:00:28.880 --> 00:00:32.790
例えば年齢で平均友達数が
どう変化するか調べるとします

00:00:32.790 --> 00:00:35.810
そのためには まず各年齢の友達数の

00:00:35.810 --> 00:00:39.140
平均値と中央値を示す表を作ることから始めます

00:00:39.140 --> 00:00:41.520
まずは新しいコードを学びましょう

00:00:41.520 --> 00:00:44.090
表作成にはRパッケージのdplyrを使います

00:00:44.090 --> 00:00:48.180
インストールして読み込んでください

00:00:48.180 --> 00:00:50.730
dplyrはデータフレームを分割し

00:00:50.730 --> 00:00:53.560
データのある部分に関数を適用させます

00:00:53.560 --> 00:00:56.200
よく使う関数は

00:00:56.200 --> 00:01:00.220
filter、group＿by、mutate、arrangeです

00:01:00.220 --> 00:01:04.480
詳細はインストラクターノートから
リンクをご覧ください

00:01:04.480 --> 00:01:07.280
では一緒に例を見ていきましょう

00:01:07.280 --> 00:01:09.850
まず最初にデータフレームを

00:01:09.850 --> 00:01:12.240
年齢別にグループ分けします

00:01:12.240 --> 00:01:16.640
そしてこれを新しい変数age＿groupsとして保存します

00:01:16.640 --> 00:01:19.300
次にこの新しいグループを要約し

00:01:19.300 --> 00:01:25.000
友達数の平均値、中央値、グループごとの人数で
新しい変数を作ります

00:01:25.000 --> 00:01:30.340
今作成したage＿groupの変数を要約します

00:01:30.340 --> 00:01:33.570
分析したいデータフレームの直後に

00:01:33.570 --> 00:01:36.220
作成したい変数を入力します

00:01:36.220 --> 00:01:38.780
friend＿count変数の平均値で平均値を

00:01:38.780 --> 00:01:41.720
friend＿count変数の中央値で中央値を出します

00:01:41.720 --> 00:01:44.580
最後に各グループのユーザ数を出します

00:01:44.580 --> 00:01:47.610
このn関数は要約にだけ使われます

00:01:47.610 --> 00:01:50.360
各グループに何人いるか表示し

00:01:50.360 --> 00:01:53.270
結果を新しい変数として保存します

00:01:53.270 --> 00:01:56.570
名前は同じデータフレームの略を使用します

00:01:56.570 --> 00:02:00.210
年齢ごとの友達数なのでfc＿by＿ageと追加します

00:02:00.210 --> 00:02:02.750
コードを実行すると

00:02:02.750 --> 00:02:07.660
101個のグループと4つの異なる変数の
データフレームができます

00:02:07.660 --> 00:02:09.520
headコマンドを実行して

00:02:09.520 --> 00:02:14.040
検証するデータの最初の数行を出力します

00:02:14.040 --> 00:02:19.960
年齢、友達数の平均値、中央値、
各グループのユーザ数を表すnが表示されています

00:02:19.960 --> 00:02:24.070
まだ順番になってないのでデータフレームを調整して

00:02:24.070 --> 00:02:27.590
年齢が若い人から高齢の順になるようにします

00:02:27.590 --> 00:02:30.780
そのためにはarrange関数を使います

00:02:30.780 --> 00:02:33.320
この結果を今の変数上に保存し

00:02:33.320 --> 00:02:37.100
データフレームを確認すると順番に並んでいますね

00:02:37.100 --> 00:02:40.360
たくさんコードがあるように思えますが

00:02:40.360 --> 00:02:43.270
このコードと例をじっくり見直して

00:02:43.270 --> 00:02:46.700
それぞれの役割を理解してください

00:02:46.700 --> 00:02:49.780
そうすれば自分でもこのコードが書けます

00:02:49.780 --> 00:02:52.080
ここで注意したいポイントは

00:02:52.080 --> 00:02:56.000
各関数の最初にデータフレームや
グループを入力することです

00:02:56.000 --> 00:03:00.160
そして新しい変数を保存して次の関数に入れます

00:03:00.160 --> 00:03:03.580
これがこのコードの分かりにくい部分です

00:03:03.580 --> 00:03:07.390
そこで同じ表を作成できる別の方法をお教えします

00:03:07.390 --> 00:03:11.700
始めにデータ集合を入れ
いくつか関数を使っていきます

00:03:11.700 --> 00:03:14.300
そのためには％．％記号を使います

00:03:14.300 --> 00:03:18.460
これでデータ集合に関数をつなげることができます

00:03:18.460 --> 00:03:20.990
次にpfデータフレームに1つずつ関数を加えます

00:03:20.990 --> 00:03:24.220
まずデータ集合を年齢ごとにグループ分けし

00:03:24.220 --> 00:03:26.570
その後もう1つ関数をつなげます

00:03:26.570 --> 00:03:32.200
その結果を友達数の平均値、中央値

00:03:32.200 --> 00:03:36.220
さらに最後にチェーンコマンドの％．％を使い

00:03:36.220 --> 00:03:40.790
データフレームを年齢ごとに配列する関数を追加します

00:03:40.790 --> 00:03:43.340
このコードでこのデータフレームができるので

00:03:43.340 --> 00:03:45.850
忘れずに変数に保存しましょう

00:03:45.850 --> 00:03:48.540
pfにfc＿by＿ageとして保存します

00:03:48.540 --> 00:03:52.200
再度headコマンドを実行し結果をチェックします

00:03:52.200 --> 00:03:55.840
コードを実行するとまったく同じ結果になりました

00:03:55.840 --> 00:04:02.000
年齢、友達数の平均値、中央値
そしてグループごとのユーザ数が含まれています

00:04:02.000 --> 00:04:04.110
行の出力を増やすと

00:04:04.110 --> 00:04:07.860
年齢と友達数の関連性をさらに詳しく調べられます

00:04:07.860 --> 00:04:10.780
13歳のユーザの平均の友達数が

00:04:10.780 --> 00:04:14.320
14歳のユーザよりやや少ないと分かりますね

00:04:14.320 --> 00:04:16.779
さらに友達数の平均値は

00:04:16.779 --> 00:04:20.279
16歳と17歳のところでピークを迎えるようです

00:04:20.279 --> 00:04:24.140
ただこうした表の要約や観察は目的ではありません

00:04:24.140 --> 00:04:25.720
これではつまらないです

00:04:25.720 --> 00:04:28.960
これらの観察を可視化を使って効果的に示すため

00:04:28.960 --> 00:04:31.800
平均値の表を図にしていきましょう

00:04:31.800 --> 00:04:34.170
ではプログラミングの課題です

00:04:34.170 --> 00:04:36.770
平均友達数対年齢の図を作成してください

00:04:36.770 --> 00:04:40.070
まずは最適なデータ集合を使いましょう

00:04:40.070 --> 00:04:42.680
ここで作った新しいデータ集合を使い

00:04:42.680 --> 00:04:45.860
変数名も以前とは違うものを使ってください

00:04:45.860 --> 00:04:49.840
RStudioで作図したら私たちの図と比べてください

